[user]
	name = shiro
	email = shiro@shiro.com
	signingkey = ***
	# signingkey = /PATH/TO/.SSH/KEY.PUB  #(case)GPG署名
[commit]
	gpgsign = true
[gpg "x509"]
	program = smimesign  #(case)SMIME署名
[push]
	autoSetupRemote = true
[alias]
	# (cf.) https://qiita.com/YamEiR/items/d98ba009d2925e7eb305
	
	# git alias : 現在登録してあるエイリアス一覧を表示
    # 長いエイリアスが多いので前方42文字で切っている
    alias = !git config --get-regexp '^alias\\.' | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\\t => \\2/' | cut -c 1-42 | sort

    # git st : トラッキングしているファイルのステータスのみ表示
	# st = status -uno
	st = status -sb -uno

	# git cm : commitの省略形
	cm = commit -m 
	# cma = commit -a -m
	# cmx = commit --no-verify -m

	# git co : checkoutの省略形
	co = checkout
	# Cheackout Clean
	#
	cc = !git checkout master && git pull

	# git graph : レポジトリのログ確認（e.g.「tig」のような挙動）
	# cf. https://medium.com/@lucaspenzeymoog/prettier-git-logs-one-graph-at-a-time-d3790a753e6b
	graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
	lls = log --oneline -n 20
	l1  = log -1 -p
	l1c = log -1 -p --color-words
	lg  = log --graph

	# git d : 差分確認 
	d = diff --color-words
	dc = diff --cached
	dcc = diff --cached --color-words

	# git-flow系
    fi = flow init -d
    ff = flow feature
    fr = flow release
    fh = flow hotfix

    # 情報取得系
    # git where <コミットハッシュ>  そのコミットが属しているブランチを表示
    where = branch --contains
    # git here : 現在のリポジトリのパスを取得(pwdコマンドに近いが表記がWindowsオリジナルに近くなる)
    here = rev-parse --show-toplevel
