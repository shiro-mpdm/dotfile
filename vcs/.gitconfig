[user]
    name = shiro
    email = "150888300+shiro-mpdm@users.noreply.github.com"
    signingkey = B30C70D81ABFE7FC
[commit]
    gpgSign = true
[gpg]
    program = /opt/homebrew/bin/gpg
[push]
    autoSetupRemote = true
[core]
    # 改行の振る舞い
    autocrlf = input
             # input: （推奨）チェックアウト時に変換しないが、コミット時にCRLFをLFに変換します。
             # true : チェックアウト時にLFをCRLFに変換、コミット時にCRLFをLFに変換。
             # false: Gitは改行コードの変換を行わない。
[alias]
    # 登録エイリアス一覧表示（前方50文字）
    alias = !git config --get-regexp '^alias\\.' | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\\t => \\2/' | cut -c 1-50 | sort

    # トラッキングしているファイルのステータスのみ表示
    # st = status -uno
    st = status -sb -uno

    # ----------
    # コミット系
    # ----------
    # GPG Key署名付きコミット
    commit = commit -S
    cm = commit -S -m
    # cma = commit -a -m
    # cmx = commit --no-verify -m

    # ----------
    # ブランチ移動
    # ----------
    co = checkout
    # ﾁｪｯｸｱｳﾄして加えてﾌﾞﾗﾝﾁ更新
    cc = !git checkout master && git pull
    # cc = !git checkout master && git pull origin master

    # ----------
    # ﾛｸﾞや差分確認
    # ----------
    # eg. tig のような挙動
    # graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    graph = log --graph --date=format:'%m/%d %H:%M' --format=format:'%C(yellow)%h %C(cyan)%ad %C(green)%an%Creset%x09%s %C(red)%d%Creset' --remotes --branches
    lls = log --oneline -n 20
    l1  = log -1 -p
    l1c = log -1 -p --color-words
    lg  = log --graph

    show = show --show-signature

    # git diff系( 差分確認)
    dif   = diff --color-words
    difc  = diff --cached
    difcc = diff --cached --color-words

    # git-flow系
    fl = flow
    fi = flow init -d
    ff = flow feature
    fr = flow release
    fh = flow hotfix

    # ----------
    # 現在地確認
    # ----------
    where = branch --contains         #そのコミットが属しているブランチを表示
    here = rev-parse --show-toplevel  # (=pwd)

