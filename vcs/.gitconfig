[user]
	name = shiro
	email = "150888300+shiro-mpdm@users.noreply.github.com"
	signingkey = B30C70D81ABFE7FC
[commit]
	gpgSign = true
[gpg]
	program = /opt/homebrew/bin/gpg
[push]
	autoSetupRemote = true
[core]
	# 改行の振る舞い
	#        true : チェックアウト時にLFをCRLFに変換し、コミット時にCRLFをLFに変換します。
	#        false: Gitは改行コードの変換を行いません。
	# (推奨) input: チェックアウト時に変換しませんが、コミット時にCRLFをLFに変換します。
	autocrlf = input
[alias]
	# cf.【Git】エイリアス晒す＆書き方まとめ
	#    https://qiita.com/YamEiR/items/d98ba009d2925e7eb305

	# 登録エイリアス一覧表示（前方50文字）
	alias = !git config --get-regexp '^alias\\.' | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1\\\t => \\2/' | cut -c 1-50 | sort

	# git st : トラッキングしているファイルのステータスのみ表示
	# st = status -uno
	st = status -sb -uno

	# ----------
	# コミット系
	# ----------
	# GPG Key署名付きコミット
	commit = commit -S
	# cm = commit -m
	# cma = commit -a -m
	# cmx = commit --no-verify -m

	# ----------
	# ブランチ移動
	# ----------
	co = checkout  # ﾁｪｯｸｱｳﾄして加えてﾌﾞﾗﾝﾁ更新
	cc = !git checkout master && git pull
	# cc = !git checkout master && git pull origin master

	# ----------
	# ﾛｸﾞや差分確認
	# ----------
	# eg. tig のような挙動
	# cf. https://medium.com/@lucaspenzeymoog/prettier-git-logs-one-graph-at-a-time-d3790a753e6b
	graph = log --graph \
			--abbrev-commit\
			--decorate\
			--format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
	lls = log --oneline -n 20
	l1  = log -1 -p
	l1c = log -1 -p --color-words
	lg  = log --graph

	show = show --show-signature

	# git diff系( 差分確認)
	d = diff --color-words
	dc = diff --cached
	dcc = diff --cached --color-words

	# git-flow系
	fi = flow init -d
	ff = flow feature
	fr = flow release
	fh = flow hotfix

	# ----------
	# 現在地確認
	# ----------
	where = branch --contains         #そのコミットが属しているブランチを表示
	here = rev-parse --show-toplevel  # (=pwd)

